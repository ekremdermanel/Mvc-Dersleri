Controller dan View'a veri göndermek için farklı yöntemler vardır.
ViewBag, ViewData, Tempdata, Model

Küçük boyutlu veriler (sayfa başlığı, uyarı mesajı vs) ViewBag, ViewData ve TempData ile gönderilebilir.

Değişken, nesne, liste, form içerikleri için model kullanılır.

VIEWBAG

HomeController Index action a yaz
ViewBag.Yazi = "Merhaba, Sitemize Hoşgeldiniz!";

Index View'unda bu değişkeni görüntülemek için HTML kodlarına yaz
@ViewBag.Yazi

VIEWDATA

ViewBag ile aynı görevi yapar, daha yeni teknolojidir.
Daha hızlı çalışır, ViewBag yerine tercih edilmelidir.

HomeController Index action a yaz
ViewData["Baslik"] = "Ana Sayfa";

HomeController Hakkimizda action a yaz
ViewData["Baslik"] = "Hakkımızda";

Layout title etikelerine yaz ve tüm sayfaların başlık alanında ViewData değeri görünsün
@ViewData["Baslik"]

TEMPDATA

Kullanımı ViewData gibidir.
Controller da farklı bir action a yönlendirme yapılırsa ViewData taşınmaz fakat TempData taşınır, yani değerini korur.

HomeController a Profil action ekle

public IActionResult Profil()
{
  TempData["Hata"] = "Profil Sayfası İçin Yetkiniz Yok";
  return RedirectToAction("Index");
}

Ana sayfa View dosyasında (Home / Index) Hata mesajını göster
<p class="text-danger mt-2">@TempData["Hata"]</p>


MODEL

Urun - Detay action ına değişken tanımla ve view a gönder

public IActionResult Detay()
{
  int sayi = 5;
  return View(sayi);
}

Detay View unda ilk satırda string tipinde model tanımla
@model int

Detay view una gönderilen ürün adı modelini ekranda göster
@Model Numaralı Ürün



Home - Hakkimizda action ına değişken tanımla ve view a gönder

public IActionResult Hakkimizda()
{
  string slogan = "En İyi Ürünler Burada";
  return View((object)slogan);
}

Detay View unda ilk satırda string tipinde model tanımla
@model string

Detay view una gönderilen ürün adı modelini ekranda göster
@Model



Home - Index action ına string listesi tanımla ve view a gönder

public IActionResult Index()
{
  List<string> maddeler = new List<string>() {"Ucuz","Kalitesiz","Yavaş","Kargo Yok","Vergisi Yüksek"};
  return View(maddeler);
}



Urun - Index View unda ilk satırda string listesi tipinde model tanımla
@model List<string>


@foreach (var item in Model)
{
  <li>@item</li>
}











CLASS OLUŞTURUP NESNELERİ MODEL OLARAK GÖNDERME



Models - Urun classı tanımla

public class Urun
{
  public int Id;
  public string UrunAdi;
  public decimal Fiyat;
  public string Aciklama;
}


UrunController da Models klasörünü çağır.
using MagazaWeb.Models;




UrunController - Detay action ına Urun tanımla ve view a gönder

public IActionResult Detay()
{ 
Urun urun = new Urun { Id = 5, UrunAdi = "Huawei P40", Fiyat = 30000, Aciklama = "Güzel ürün" };
      
return View(urun);
}


Models klasöründeki sınıflara tüm View lardan MagazaWeb.Models yazmadan direk sınıf adıyla erişmek için _ViewImports.cshtml dosyasına ekle
@using MagazaWeb.Models

Views - Urun - Detay.cshtml view dosyasındaki model tipini düzenle
@model Urun

Ürün bilgilerini sayfada uygun yerlere yazdır
@Model.UrunAdi
@Model.Fiyat
@Model.Aciklama






UrunController - Index action ına Urun listesi tanımla ve view a gönder

public IActionResult Index()
{
  List<Urun> urunler = new List<Urun> {
    new Urun { Id = 1, UrunAdi = "Iphone 14", Fiyat = 40000, Aciklama = "Çok pahalı almayın" },
    new Urun { Id = 2, UrunAdi = "Samsung A22", Fiyat = 30000, Aciklama = "Güzel ürün" },
    new Urun { Id = 3, UrunAdi = "Xiaomi Note 9", Fiyat = 15000, Aciklama = "İyi" },
    new Urun { Id = 4, UrunAdi = "Noika 3310", Fiyat = 1000, Aciklama = "Tuğla" },
    new Urun { Id = 5, UrunAdi = "Huawei P40", Fiyat = 30000, Aciklama = "Güzel ürün" },
    new Urun { Id = 6, UrunAdi = "Oppo A15", Fiyat = 15000, Aciklama = "Kamerası iyi" }
  };

  return View(urunler);
}


Views- Urun - Index.cshtml view unda ilk satırda Urun listesi tipinde model tanımla
@model List<Urun>

Gönderilen listeyi döngüye alarak ekranda göster
ilk ürün hariç diğer ürün div lerini sil

foreach döngüsü ile listeleme yap
Döngü içine ygun yerlere @item.UrunAdi, @item.Fiyat yazdır

@foreach (var item in Model)
{ 
  @item.UrunAdi ,   @item.Fiyat 
}