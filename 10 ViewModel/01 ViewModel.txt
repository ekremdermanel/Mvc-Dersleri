ViewModel ile veritabanında yapılacak değişikliklerle view üzerindeki kontroller ayrılır.
Veritabanı özellikleri Model'de belirlenir.
Tasarımdaki özellikler ViewModel'de belirlenir.

Urun.cs düzenle
EklenmeTarihi ekle

public class Urun
{
  public int Id { get; set; }
  public string UrunAdi { get; set; }
  public decimal? Fiyat { get; set; }
  public int? Stok { get; set; }
  public string? Aciklama { get; set; }
  public DateTime EklenmeTarihi { get; set; }
}


ViewModels klasörü oluştur

ViewModels içine UrunViewModel sınıfı ekle

Urun sınıfındaki EklenmeTarihi dışında tüm özellikleri kullan
EklenmeTarihi formdan girilmeyecek sistem saatini kullanacak ve veritabanında saklanacak

public class UrunViewModel
{
  public int Id { get; set; }
  public string UrunAdi { get; set; }
  public decimal? Fiyat { get; set; }
  public int? Stok { get; set; }
  public string? Aciklama { get; set; }
}


Veri doğrulamaları yaz

public class UrunViewModel
{
  public int Id { get; set; }

  [Display(Name = "Ürün Adı")]
  [Required(ErrorMessage = "{0} giriniz")]
  [StringLength(20, MinimumLength = 3, ErrorMessage = "{0} {2}-{1} karakter olmalı")]
  public string UrunAdi { get; set; }

  [Display(Name = "Ürün Fiyatı")]
  [Required(ErrorMessage = "{0} giriniz")]
  public decimal? Fiyat { get; set; }

  [Display(Name = "Açıklama")]
  public string? Aciklama { get; set; }

  [Display(Name = "Stok Adedi")]
  [Required(ErrorMessage = "{0} giriniz")]
  [Range(0, 100, ErrorMessage = "{0} {1}-{2} arası olmalı")]
  public int? Stok { get; set; }
}


Views - _ViewImports.cshtml ye ekle
@using MagazaWeb.ViewModels 


Views - Admin - UrunEkle ve UrunGuncelle view larını UrunViewModel kullanarak hazırla

Js ile anlık kontrol edilebilir.

@section Scriptler {
    <script src="~/admin/js/jquery.validate.min.js"></script>
    <script src="~/admin/js/jquery.validate.unobtrusive.min.js"></script>
}


AdminController'da veri doğrulama kontrollerini yap
using MagazaWeb.ViewModels;


public IActionResult UrunEkle()
{
    return View();
}

[HttpPost]
public IActionResult UrunEkle(UrunViewModel viewModel)
{
    if(!ModelState.IsValid) {
        return View(viewModel);
    }
    return RedirectToAction("Urun");
}

public IActionResult UrunGuncelle()
{
    UrunViewModel viewModel = new UrunViewModel();
    viewModel.UrunAdi="Iphone";
    viewModel.Fiyat=1000;
    viewModel.Stok=10;
    viewModel.Aciklama="İyidir";
    return View(viewModel);
}

[HttpPost]
public IActionResult UrunGuncelle(UrunViewModel viewModel)
{
    if(!ModelState.IsValid) {
        return View(viewModel);
    }
    return RedirectToAction("Urun");
}

